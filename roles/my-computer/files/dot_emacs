(eval-when-compile (require 'cl))
(load-theme 'tango)

;; Melpa
(require 'package)
(add-to-list 'package-archives '("melpa"        . "http://melpa.org/packages/")  t)
(add-to-list 'package-archives '("melpa-stable" . "http://stable.melpa.org/packages/")  t)
(add-to-list 'package-archives '("marmalade"    . "http://marmalade-repo.org/packages/") t)
(package-initialize)

(defvar my-package-list
  '(helm
    helm-ag
    helm-descbinds
    auto-complete
    open-junk-file
    ac-cider
    cider
    paredit
    multiple-cursors
    hl-line+
    yasnippet))

(let ((not-installed
       (loop for package in my-package-list
             when (not (package-installed-p package))
             collect package)))
  (when not-installed
    (package-refresh-contents)
    (dolist (package not-installed)
      (package-install package))))

;; ~/.emacs.d/site-lisp
(let ((default-directory (expand-file-name "~/.emacs.d/site-lisp")))
  (add-to-list 'load-path default-directory)
  (if (fboundp 'normal-top-level-add-subdirs-to-load-path)
            (normal-top-level-add-subdirs-to-load-path)))

(require 'init-loader)
(setq init-loader-show-log-after-init nil)
(init-loader-load "~/.emacs.d/inits")
(put 'upcase-region 'disabled nil)
